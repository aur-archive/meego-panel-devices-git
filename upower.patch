From 9326541b080f0902a54849c3d9d34bced3c3b27a Mon Sep 17 00:00:00 2001
From: Andrea Scarpino <andrea@archlinux.org>
Date: Sat, 19 Feb 2011 01:42:08 +0100
Subject: [PATCH] DeviceKit-Power -> UPower

---
 configure.ac                      |    4 +-
 power-icon/src/mpd-idle-manager.c |    8 +++---
 power-icon/src/mpd-lid-device.c   |    8 +++---
 src/mpd-battery-device.c          |   50 ++++++++++++++++++------------------
 4 files changed, 35 insertions(+), 35 deletions(-)

diff --git a/configure.ac b/configure.ac
index b2ddbfe..ed4b716 100644
--- a/configure.ac
+++ b/configure.ac
@@ -70,7 +70,7 @@ PKG_CHECK_MODULES(MPD,
                   $gvc_deps
                   clutter-1.0
                   clutter-gtk-0.12
-                  devkit-power-gobject
+                  upower-glib >= 0.9.6
                   gconf-2.0
                   gio-2.0
                   libcanberra-gtk
@@ -115,7 +115,7 @@ PKG_CHECK_MODULES(MPI,
                   $eck_deps
                   clutter-1.0
                   clutter-gtk-0.12
-                  devkit-power-gobject
+                  upower-glib >= 0.9.6
                   gconf-2.0
                   gdk-x11-2.0
                   libnotify
diff --git a/power-icon/src/mpd-idle-manager.c b/power-icon/src/mpd-idle-manager.c
index 0cab136..5daaaa9 100644
--- a/power-icon/src/mpd-idle-manager.c
+++ b/power-icon/src/mpd-idle-manager.c
@@ -20,7 +20,7 @@
  */
 
 #include <dbus/dbus-glib.h>
-#include <devkit-power-gobject/devicekit-power.h>
+#include <libupower-glib/upower.h>
 
 #include <gdk/gdkx.h>
 #include <X11/extensions/dpms.h>
@@ -42,7 +42,7 @@ typedef struct
   DBusGProxy  *presence;
   DBusGProxy  *screensaver;
 
-  DkpClient   *power_client;
+  UpClient    *power_client;
 
   Display     *display;
 
@@ -216,7 +216,7 @@ mpd_idle_manager_init (MpdIdleManager *self)
   g_signal_connect (priv->conf, "notify::suspend-idle-time",
                     G_CALLBACK (_suspend_timeout_changed_cb), self);
 
-  priv->power_client = dkp_client_new ();
+  priv->power_client = up_client_new ();
 
   conn = dbus_g_bus_get (DBUS_BUS_SESSION, &error);
   if (!conn)
@@ -285,7 +285,7 @@ mpd_idle_manager_suspend (MpdIdleManager   *self,
   if (!ret)
     return false;
 
-  ret = dkp_client_suspend (priv->power_client, error);
+  ret = up_client_suspend_sync (priv->power_client, NULL, error);
 
   dbus_g_proxy_call_no_reply (priv->screensaver, "SimulateUserActivity",
                               G_TYPE_INVALID);
diff --git a/power-icon/src/mpd-lid-device.c b/power-icon/src/mpd-lid-device.c
index 2f8b71e..b51434e 100644
--- a/power-icon/src/mpd-lid-device.c
+++ b/power-icon/src/mpd-lid-device.c
@@ -18,7 +18,7 @@
  * Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
  */
 
-#include <devkit-power-gobject/devicekit-power.h>
+#include <libupower-glib/upower.h>
 
 #include "mpd-gobject.h"
 #include "mpd-lid-device.h"
@@ -42,12 +42,12 @@ enum
 
 typedef struct
 {
-  DkpClient *client;
+  UpClient  *client;
   bool       closed;
 } MpdLidDevicePrivate;
 
 static void
-_client_changed_cb (DkpClient    *client,
+_client_changed_cb (UpClient    *client,
                     MpdLidDevice *self)
 {
   bool closed;
@@ -128,7 +128,7 @@ mpd_lid_device_init (MpdLidDevice *self)
 {
   MpdLidDevicePrivate *priv = GET_PRIVATE (self);
 
-  priv->client = dkp_client_new ();
+  priv->client = up_client_new ();
   g_signal_connect (priv->client, "changed",
                     G_CALLBACK (_client_changed_cb), self);
 	g_object_get (priv->client,
diff --git a/src/mpd-battery-device.c b/src/mpd-battery-device.c
index 1955acf..b4f89e0 100644
--- a/src/mpd-battery-device.c
+++ b/src/mpd-battery-device.c
@@ -18,7 +18,7 @@
  * Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
  */
 
-#include <devkit-power-gobject/devicekit-power.h>
+#include <libupower-glib/upower.h>
 #include <glib/gi18n.h>
 
 #include "mpd-battery-device.h"
@@ -40,8 +40,8 @@ enum
 
 typedef struct
 {
-  DkpClient             *client;
-  DkpDevice             *device;
+  UpClient              *client;
+  UpDevice              *device;
   unsigned int           percentage;
   MpdBatteryDeviceState  state;
 } MpdBatteryDevicePrivate;
@@ -54,12 +54,12 @@ mpd_battery_device_set_state      (MpdBatteryDevice       *self,
                                    MpdBatteryDeviceState   state);
 
 static void
-_client_device_added_cb (DkpClient        *client,
-                         DkpDevice        *device,
+_client_device_added_cb (UpClient         *client,
+                         UpDevice         *device,
                          MpdBatteryDevice *self)
 {
   MpdBatteryDevicePrivate *priv = GET_PRIVATE (self);
-  DkpDeviceType device_type;
+  UpDeviceKind device_type;
 
   if (NULL == priv->device)
   {
@@ -67,7 +67,7 @@ _client_device_added_cb (DkpClient        *client,
                   "type", &device_type,
                   NULL);
 
-    if (DKP_DEVICE_TYPE_BATTERY == device_type)
+    if (UP_DEVICE_KIND_BATTERY == device_type)
     {
       priv->device = g_object_ref (device);
 
@@ -80,15 +80,15 @@ _client_device_added_cb (DkpClient        *client,
 }
 
 static void
-_client_device_removed_cb (DkpClient        *client,
-                           DkpDevice        *device,
+_client_device_removed_cb (UpClient        *client,
+                           UpDevice        *device,
                            MpdBatteryDevice *self)
 {
   MpdBatteryDevicePrivate *priv = GET_PRIVATE (self);
 
   if (priv->device &&
-      0 == g_strcmp0 (dkp_device_get_object_path (device),
-                      dkp_device_get_object_path (priv->device)))
+      0 == g_strcmp0 (up_device_get_object_path (device),
+                      up_device_get_object_path (priv->device)))
   {
     g_object_unref (priv->device);
     priv->device = NULL;
@@ -99,15 +99,15 @@ _client_device_removed_cb (DkpClient        *client,
 }
 
 static void
-_client_device_changed_cb (DkpClient        *client,
-                           DkpDevice        *device,
+_client_device_changed_cb (UpClient        *client,
+                           UpDevice        *device,
                            MpdBatteryDevice *self)
 {
   MpdBatteryDevicePrivate *priv = GET_PRIVATE (self);
 
   if (priv->device &&
-      0 == g_strcmp0 (dkp_device_get_object_path (device),
-                      dkp_device_get_object_path (priv->device)))
+      0 == g_strcmp0 (up_device_get_object_path (device),
+                      up_device_get_object_path (priv->device)))
   {
     mpd_battery_device_set_percentage (self,
                                        mpd_battery_device_get_percentage (self));
@@ -143,7 +143,7 @@ _constructor (GType                  type,
 
   /* Look up battery device. */
 
-  devices = dkp_client_enumerate_devices (priv->client, &error);
+  devices = up_client_enumerate_devices_sync (priv->client, NULL, &error);
   if (error)
   {
     g_critical ("%s : %s", G_STRLOC, error->message);
@@ -154,13 +154,13 @@ _constructor (GType                  type,
 
   for (i = 0; i < devices->len; i++)
   {
-    DkpDevice *device = g_ptr_array_index (devices, i);
-    DkpDeviceType device_type;
+    UpDevice *device = g_ptr_array_index (devices, i);
+    UpDeviceKind device_type;
     g_object_get (device,
                   "type", &device_type,
                   NULL);
 
-    if (DKP_DEVICE_TYPE_BATTERY == device_type)
+    if (UP_DEVICE_KIND_BATTERY == device_type)
       priv->device = g_object_ref (device);
   }
 
@@ -262,7 +262,7 @@ mpd_battery_device_init (MpdBatteryDevice *self)
 {
   MpdBatteryDevicePrivate *priv = GET_PRIVATE (self);
 
-  priv->client = dkp_client_new ();
+  priv->client = up_client_new ();
   g_signal_connect (priv->client, "device-added",
                     G_CALLBACK (_client_device_added_cb), self);
   g_signal_connect (priv->client, "device-removed",
@@ -319,7 +319,7 @@ mpd_battery_device_get_state (MpdBatteryDevice *self)
 {
   MpdBatteryDevicePrivate *priv = GET_PRIVATE (self);
   MpdBatteryDeviceState state;
-  DkpDeviceState        device_state;
+  UpDeviceState        device_state;
 
   g_return_val_if_fail (MPD_IS_BATTERY_DEVICE (self),
                         MPD_BATTERY_DEVICE_STATE_UNKNOWN);
@@ -335,14 +335,14 @@ mpd_battery_device_get_state (MpdBatteryDevice *self)
 
   switch (device_state)
   {
-  case DKP_DEVICE_STATE_CHARGING:
+  case UP_DEVICE_STATE_CHARGING:
     state = MPD_BATTERY_DEVICE_STATE_CHARGING;
     break;
-  case DKP_DEVICE_STATE_DISCHARGING:
-  case DKP_DEVICE_STATE_EMPTY:
+  case UP_DEVICE_STATE_DISCHARGING:
+  case UP_DEVICE_STATE_EMPTY:
     state = MPD_BATTERY_DEVICE_STATE_DISCHARGING;
     break;
-  case DKP_DEVICE_STATE_FULLY_CHARGED:
+  case UP_DEVICE_STATE_FULLY_CHARGED:
     state = MPD_BATTERY_DEVICE_STATE_FULLY_CHARGED;
     break;
   default:
-- 
1.7.4.1

